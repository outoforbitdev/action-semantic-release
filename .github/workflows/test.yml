name: Test Action
permissions: read-all
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
jobs:
  test-docker-image:
    runs-on: ubuntu-latest
    name: Test Action
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Test Docker Image
        uses: outoforbitdev/action-docker-test@v1.0.0-staging.1
        id: docker-test
        with:
          test-command: "sh ./test.sh"
      - name: Test Action (No Changelog)
        uses: ./
        id: action-test-no-change
        with:
          github-token: ${{ secrets.RELEASE_TOKEN }}
          skip-changelog: true
          debug: true
      - name: Test Action (With Changelog)
        uses: ./
        id: action-test
        with:
          github-token: ${{ secrets.RELEASE_TOKEN }}
          skip-changelog: false
          debug: true
      - name: Summarize Versions
        env:
          LAST_VERSION: ${{ steps.action-test.outputs.last-version }}
          NEXT_VERSION: ${{ steps.action-test.outputs.next-version }}
          VERSION_RELEASED: ${{ steps.action-test.outputs.version-released}}
        run: >-
          echo "### Version Summaries" >> $GITHUB_STEP_SUMMARY;
          echo "* Last version - $LAST_VERSION" >> $GITHUB_STEP_SUMMARY;
          echo "* Next version - $NEXT_VERSION" >> $GITHUB_STEP_SUMMARY;
          echo "* Version released - $VERSION_RELEASED" >> $GITHUB_STEP_SUMMARY

  publish-docker-image:
    runs-on: ubuntu-latest
    name: Test Action
    environment: manual_approval
    needs: test-docker-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Publish Image
        uses: outoforbitdev/action-docker-publish@v3.0.0
        id: docker-publish
        if: github.base_ref == 'staging' || github.base_ref == 'main'
        with:
          docker-username: ${{ secrets.DOCKER_USERNAME }}
          docker-token: ${{ secrets.DOCKER_TOKEN }}
          image-name: ${{ vars.IMAGE_NAME }}
          image-tag: "build"
      - name: Output Tags
        run: echo "Tag is ${{steps.docker-publish.output.sha-tag}}"